#!/bin/bash
#
# Paludis hook script to clean a shared config.cache after a package gets installed.
# Clean required cuz some packages wanted to add some other ('cept provided by a package
# manager) compiler/linker options, so they are goes to a cache file and later lead to
# a conflict error message (when another autotools based package gets compiled).
#
# This hook will remove CFLAGS/CXXFLAGS/LDFLAGS from the cache file, so conflict
# will not happened.
#
# Copyright (c), 2014 by Alex Turbov <i.zaufi@gmail.com>
#
# Version: @PH_VERSION@
#

source ${PALUDIS_EBUILD_DIR}/echo_functions.bash

_try_get_cache_file()
{
    local -r _tgcf_var="$1"
    if [ -z "${_tgcf_var}" ]; then
        return 1
    fi
    # Make sure EXTRA_ECONF is here
    if [ -n "${EXTRA_ECONF}" ]; then
        # Check if --cache-file was specified in EXTRA_ECONF
        # TODO It will fail if cache file name (or path) contains spaces
        local -r _tgcf_cache_file=`sed 's,.*--cache-file=\([^\s]\+\).*,\1,' <<<"${EXTRA_ECONF}"`
        if [ -n "${_tgcf_cache_file}" ]; then
            eval "${_tgcf_var}='${_tgcf_cache_file}'"
            if [ x"${PALUDIS_HOOK_DEBUG}" = 'xyes' ]; then
                einfo "Got cache file: ${_tgcf_cache_file}"
            fi
            return 0
        elif [ x"${PALUDIS_HOOK_DEBUG}" = 'xyes' ]; then
            einfo "config.cache file is not present in EXTRA_ECONF"
        fi
    fi
    return 1
}

try_clean_cache_file()
{
    local _tccf_cache_file
    if _try_get_cache_file _tccf_cache_file; then
        if [ -w "${_tccf_cache_file}" ]; then
            einfo "Clean up the autoconf cache file [`whoami`]: ${_tccf_cache_file}"
            # ATTENTION Remove any cached environment variables
            # Some ebuilds modify various exported vars and being saved
            # it leads to other packages fail to build...
            # TODO Make variables to remove configurable?
            grep -v '^ac_cv_env_' "${_tccf_cache_file}" >"${T}"/config.cache \
                && mv "${T}"/config.cache "${_tccf_cache_file}"
        fi
    fi
}

case "${HOOK}" in
    # ATTENTION This script must be symlinked to the following hook dirs:
    ebuild_configure_pre)
        try_clean_cache_file
        ;;
esac

# kate: hl bash;
