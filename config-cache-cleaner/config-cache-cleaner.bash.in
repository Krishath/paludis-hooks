#!/bin/bash
#
# Paludis hook script to clean a shared config.cache after a package gets installed.
# Clean required cuz some packages wanted to add some other ('cept provided by a package
# manager) compiler/linker options, so they are goes to a cache file and later lead to
# a conflict error message (when another autotools based package gets compiled).
#
# This hook will remove CFLAGS/CXXFLAGS/LDFLAGS from the cache file, so conflict
# will not happened.
#
# Copyright (c), 2014 by Alex Turbov <i.zaufi@gmail.com>
#
# Version: @PH_VERSION@
#

source ${PALUDIS_EBUILD_DIR}/echo_functions.bash

_ccc_rememberfile="${T}/.config_cache_cleaner_was_here_${PALUDIS_PID}"

_try_get_cache_file()
{
    local -r _tgcf_var="$1"
    if [ -z "${_tgcf_var}" ]; then
        return 1
    fi
    # Make sure EXTRA_ECONF is here
    if [ -n "${EXTRA_ECONF}" ]; then
        # Check if --cache-file was specified in EXTRA_ECONF
        # TODO It will fail if cache file name (or path) contains spaces
        local -r _tgcf_cache_file=`sed 's,.*--cache-file=\([^\s]\+\).*,\1,' <<<"${EXTRA_ECONF}"`
        if [ -n "${_tgcf_cache_file}" -a -e "${_tgcf_cache_file}" ]; then
            eval "${_tgcf_var}='${_tgcf_cache_file}'"
            einfo "Found autoconf cache file: ${_tgcf_cache_file}"
            return 0
        fi
    fi
    return 1
}

try_get_cache_timestamp()
{
    local _tgct_cache_file
    if _try_get_cache_file _tgct_cache_file; then
        # Remember timestamp of the cache file
        stat -c '%Y' "${_tgct_cache_file}" >"${_ccc_rememberfile}"
    fi
}

try_clean_cache_file()
{
    if [ -e "${_ccc_rememberfile}" ]; then
        local _tgct_cache_file
        if _try_get_cache_file _tccf_cache_file; then
            # Check if cache file has changed since configuration stage
            local -r old_cache_timestamp=`cat "${_ccc_rememberfile}"`
            local -r new_cache_timestamp=`stat -c '%Y' "${_tccf_cache_file}"`
            if [ "${old_cache_timestamp}" -lt "${new_cache_timestamp}" ]; then
                einfo "Clean autoconf cache file: ${_tccf_cache_file}"
                egrep -v 'ac_cv_env_(C[XP]{2}?|LD)FLAGS_(set|value)' "${_tccf_cache_file}" >"${T}"/config.cache \
                  && mv "${T}"/config.cache "${_tccf_cache_file}"
            fi
        fi
    fi
}

case "${HOOK}" in
    # ATTENTION This script must be symlinked to the following hook dirs:
    ebuild_configure_pre)
        try_get_cache_timestamp
        ;;
    ebuild_configure_post)
        if [ -e "${rememberfile}" ] ; then
            try_clean_cache_file
        fi
        ;;
esac

# kate: hl bash;
