#!/bin/bash
#
# Paludis hook script to apply patch (w/o modifying corresponding ebuild file).
#
# Copyright (c), 2010-2012 by Alex Turbov <i.zaufi@gmail.com>
#
# Version: @PH_VERSION@
#

source ${PALUDIS_EBUILD_DIR}/echo_functions.bash

PATCH_DIR="@PH_LOCALSTATEDIR@/paludis/autopatches"
CONFIG_FILE="@PH_HOOKSCONFDIR@/auto-patch.conf"

# Configuration override
[ -f ${CONFIG_FILE} ] && source ${CONFIG_FILE}

PATCH_DIR_FULL="${PATCH_DIR}/${HOOK}/${CATEGORY}/${PF}"

rememberfile="${T}/.autopatch_was_here_${PALUDIS_PID}"

issue_a_warning() {
    ewarn "WARNING: This package will be installed with additional patches applied by auto-patch hook."
    ewarn "WARNING: Before filing a bug, remove all patches, reinstall, and try again..."
}

try_to_apply_patches() {
    if [ -n "${PALUDIS_HOOK_DEBUG}" ]; then
        einfo "Check ${PATCH_DIR_FULL}"
    fi
    if [ -d "${PATCH_DIR_FULL}" ] ; then
        cd ${S}
        for i in `ls ${PATCH_DIR_FULL}/*.patch` ; do
            epatch ${i} || die
            touch ${rememberfile}
        done
        if [ -e "${rememberfile}" ]; then
            issue_a_warning
        else
            einfo "No patches in for this package."
        fi
    fi
}

case "${HOOK}" in
    # ATTENTION This script must be symlinked to the following hook dirs:
    ebuild_compile_post         | \
    ebuild_compile_pre          | \
    ebuild_configure_post       | \
    ebuild_configure_pre        | \
    ebuild_install_pre          | \
    ebuild_unpack_post          )
        try_to_apply_patches
        ;;
    install_all_post)
        if [ -e "${rememberfile}" ] ; then
            issue_a_warning
            rm ${rememberfile}
        fi
        ;;
esac

# kate: hl bash;
